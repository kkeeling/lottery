# Generated by Django 2.2 on 2021-12-31 06:55

import datetime
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dk_name', models.CharField(blank=True, max_length=255, null=True)),
                ('four4four_name', models.CharField(blank=True, max_length=255, null=True)),
                ('awesemo_name', models.CharField(blank=True, max_length=255, null=True)),
                ('awesemo_ownership_name', models.CharField(blank=True, max_length=255, null=True)),
                ('fc_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tda_name', models.CharField(blank=True, max_length=255, null=True)),
                ('fd_name', models.CharField(blank=True, max_length=255, null=True)),
                ('etr_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rts_name', models.CharField(blank=True, max_length=255, null=True)),
                ('yahoo_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rg_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ss_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Alias',
                'verbose_name_plural': 'Aliases',
            },
        ),
        migrations.CreateModel(
            name='BuildPlayerProjection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projection', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=5, verbose_name='Proj')),
                ('cpt_ownership_projection', models.DecimalField(decimal_places=4, default=0.0, max_digits=5, verbose_name='Own')),
                ('flex_ownership_projection', models.DecimalField(decimal_places=4, default=0.0, max_digits=5, verbose_name='Own')),
                ('adjusted_opportunity', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=5, verbose_name='AO')),
                ('value', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=5, verbose_name='V')),
                ('balanced_projection', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=7, null=True, verbose_name='BP')),
                ('balanced_value', models.DecimalField(db_index=True, decimal_places=4, default=0.0, max_digits=7, verbose_name='BV')),
                ('in_play', models.BooleanField(db_index=True, default=True)),
                ('min_exposure', models.IntegerField(default=0, verbose_name='Min')),
                ('max_exposure', models.IntegerField(default=100, verbose_name='Max')),
                ('locked', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Player Projection',
                'verbose_name_plural': 'Player Projections',
                'ordering': ['-projection'],
            },
        ),
        migrations.CreateModel(
            name='CeilingProjectionRangeMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_projection', models.DecimalField(decimal_places=4, max_digits=6)),
                ('max_projection', models.DecimalField(decimal_places=4, max_digits=6)),
                ('value_to_assign', models.DecimalField(decimal_places=4, max_digits=6)),
                ('yh_value_to_assign', models.DecimalField(decimal_places=4, max_digits=6)),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcomes_sheet', models.FileField(blank=True, null=True, upload_to='uploads/sims')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('num_games', models.IntegerField(default=1)),
                ('max_entrants', models.IntegerField()),
                ('max_entries', models.IntegerField()),
                ('mincash_payout', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('mincash_score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('name', models.CharField(max_length=255)),
                ('places_paid', models.IntegerField(blank=True, null=True)),
                ('prize_pool', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('start_date', models.IntegerField(null=True)),
                ('total_entrants', models.IntegerField(blank=True, null=True)),
                ('winning_payout', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('winning_score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('one_pct_score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='1% Score')),
                ('one_pct_rank', models.IntegerField(blank=True, null=True, verbose_name='1% Rank')),
                ('half_pct_score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='0.5% Score')),
                ('half_pct_rank', models.IntegerField(blank=True, null=True, verbose_name='0.5% Rank')),
                ('great_score', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Great Score')),
                ('play_order', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ['slate', '-prize_pool'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_team', models.CharField(max_length=4)),
                ('away_team', models.CharField(max_length=4)),
                ('game_date', models.DateTimeField()),
                ('game_total', models.DecimalField(decimal_places=2, max_digits=4)),
                ('home_spread', models.DecimalField(decimal_places=2, max_digits=4)),
                ('away_spread', models.DecimalField(decimal_places=2, max_digits=4)),
                ('home_implied', models.DecimalField(decimal_places=2, max_digits=4)),
                ('away_implied', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSelectionCriteria',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('site', models.CharField(choices=[('draftkings', 'DraftKings'), ('fanduel', 'Fanduel'), ('yahoo', 'Yahoo')], default='fanduel', max_length=50)),
                ('qb_threshold', models.TextField(blank=True, help_text='Forumla for picking qbs in play', null=True)),
                ('rb_threshold', models.TextField(blank=True, help_text='Forumla for picking rbs in play', null=True)),
                ('wr_threshold', models.TextField(blank=True, help_text='Forumla for picking wrs in play', null=True)),
                ('te_threshold', models.TextField(blank=True, help_text='Forumla for picking tes in play', null=True)),
                ('dst_threshold', models.TextField(blank=True, help_text='Forumla for picking dsts in play', null=True)),
            ],
            options={
                'verbose_name': 'In-Play Criteria',
                'verbose_name_plural': 'In-Play Criteria',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SheetColumnHeaders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projection_site', models.CharField(choices=[('4for4', '4For4'), ('awesemo', 'Awesemo'), ('awesemo_own', 'Awesemo Ownership'), ('etr', 'Establish The Run'), ('tda', 'The Daily Average'), ('rg', 'Rotogrinders'), ('fc', 'Fantasy Cruncher'), ('rts', 'Run The Sims'), ('sabersim', 'Saber Sim')], default='4for4', max_length=255)),
                ('site', models.CharField(choices=[('draftkings', 'DraftKings'), ('fanduel', 'Fanduel'), ('yahoo', 'Yahoo')], default='fanduel', max_length=50)),
                ('column_player_name', models.CharField(max_length=50)),
                ('column_team', models.CharField(max_length=50)),
                ('column_median_projection', models.CharField(max_length=50)),
                ('column_floor_projection', models.CharField(blank=True, max_length=50, null=True)),
                ('column_ceiling_projection', models.CharField(blank=True, max_length=50, null=True)),
                ('column_rush_att_projection', models.CharField(blank=True, max_length=50, null=True)),
                ('column_rec_projection', models.CharField(blank=True, max_length=50, null=True)),
                ('column_own_projection', models.CharField(blank=True, max_length=50, null=True)),
                ('column_ownership', models.CharField(blank=True, max_length=50, null=True)),
                ('column_score', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Column Headers',
                'verbose_name_plural': 'Column Headers',
            },
        ),
        migrations.CreateModel(
            name='Slate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('end_datetime', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Slate')),
                ('site', models.CharField(choices=[('draftkings', 'DraftKings'), ('fanduel', 'Fanduel'), ('yahoo', 'Yahoo')], default='fanduel', max_length=50)),
                ('is_complete', models.BooleanField(default=False)),
                ('salaries_sheet_type', models.CharField(choices=[('site', 'Salary File'), ('fantasycruncher', 'FantasyCruncher Export'), ('sabersim', 'SaberSim Export')], default='site', max_length=255)),
                ('salaries', models.FileField(blank=True, null=True, upload_to='uploads/salaries')),
                ('fc_actuals_sheet', models.FileField(blank=True, null=True, upload_to='uploads/actuals', verbose_name='FC Actuals CSV')),
            ],
            options={
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='SlateBuild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('used_in_contests', models.BooleanField(default=False, verbose_name='Used')),
                ('lineup_start_number', models.IntegerField(default=1)),
                ('total_lineups', models.PositiveIntegerField(default=0, verbose_name='total')),
                ('top_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='top')),
                ('total_optimals', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='#opt')),
                ('total_cashes', models.PositiveIntegerField(blank=True, null=True, verbose_name='cashes')),
                ('total_one_pct', models.PositiveIntegerField(blank=True, null=True, verbose_name='1%')),
                ('total_half_pct', models.PositiveIntegerField(blank=True, null=True, verbose_name='0.5%')),
                ('great_build', models.BooleanField(default=False, verbose_name='gb')),
                ('binked', models.BooleanField(default=False, help_text='Finished 1st, 2nd, or 3rd', verbose_name='bink')),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('running', 'Running'), ('complete', 'Complete'), ('error', 'Error')], default='not_started', max_length=25)),
                ('projections_ready', models.BooleanField(default=False)),
                ('construction_ready', models.BooleanField(default=False)),
                ('pct_complete', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('optimals_pct_complete', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('elapsed_time', models.DurationField(default=datetime.timedelta(0))),
            ],
            options={
                'verbose_name': 'Slate Build',
                'verbose_name_plural': 'Slate Builds',
            },
        ),
        migrations.CreateModel(
            name='SlateBuildConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('site', models.CharField(choices=[('draftkings', 'DraftKings'), ('fanduel', 'Fanduel'), ('yahoo', 'Yahoo')], default='fanduel', max_length=50)),
                ('randomness', models.DecimalField(decimal_places=2, default=0.3, max_digits=2)),
                ('uniques', models.IntegerField(default=1)),
                ('min_salary', models.IntegerField(default=59000)),
                ('use_simulation', models.BooleanField(default=False)),
                ('lineup_multiplier', models.SmallIntegerField(default=5)),
                ('optimize_with_ceilings', models.BooleanField(default=False)),
                ('lineup_removal_by', models.CharField(choices=[('projection', 'Projection'), ('median', 'Median'), ('s90', 'Ceiling')], default='projection', max_length=15)),
            ],
            options={
                'verbose_name': 'Build Config',
                'verbose_name_plural': 'Build Configs',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SlateBuildGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('max_from_group', models.PositiveIntegerField(default=1)),
                ('min_from_group', models.PositiveIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='nfl_sd.SlateBuild')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='SlateGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zscore', models.DecimalField(decimal_places=4, default=0.0, max_digits=6, verbose_name='Z-Score')),
                ('game_sim', models.TextField(blank=True, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slates', to='nfl_sd.Game')),
                ('slate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='nfl_sd.Slate')),
            ],
            options={
                'verbose_name': 'Game',
                'verbose_name_plural': 'Games',
            },
        ),
        migrations.CreateModel(
            name='SlatePlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(max_length=255)),
                ('salary', models.IntegerField()),
                ('site_pos', models.CharField(max_length=5)),
                ('team', models.CharField(max_length=4)),
                ('fantasy_points', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('game', models.CharField(max_length=10)),
                ('ownership', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('slate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='nfl_sd.Slate')),
                ('slate_game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='nfl_sd.SlateGame')),
            ],
            options={
                'ordering': ['-salary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.PositiveIntegerField(verbose_name='Week #')),
                ('slate_year', models.PositiveIntegerField()),
                ('start', models.DateField()),
                ('end', models.DateField()),
            ],
            options={
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='SlateProjectionSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False)),
                ('projection_site', models.CharField(choices=[('4for4', '4For4'), ('awesemo', 'Awesemo'), ('awesemo_own', 'Awesemo Ownership'), ('etr', 'Establish The Run'), ('tda', 'The Daily Average'), ('rg', 'Rotogrinders'), ('fc', 'Fantasy Cruncher'), ('rts', 'Run The Sims'), ('sabersim', 'Saber Sim')], default='4for4', max_length=255)),
                ('projection_sheet', models.FileField(upload_to='uploads/projections')),
                ('slate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projections', to='nfl_sd.Slate')),
            ],
        ),
        migrations.CreateModel(
            name='SlatePlayerRawProjection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projection_site', models.CharField(choices=[('4for4', '4For4'), ('awesemo', 'Awesemo'), ('awesemo_own', 'Awesemo Ownership'), ('etr', 'Establish The Run'), ('tda', 'The Daily Average'), ('rg', 'Rotogrinders'), ('fc', 'Fantasy Cruncher'), ('rts', 'Run The Sims'), ('sabersim', 'Saber Sim')], default='4for4', max_length=255)),
                ('projection', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Proj')),
                ('floor', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Flr')),
                ('ceiling', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Ceil')),
                ('stdev', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Stdev')),
                ('cpt_ownership_projection', models.DecimalField(decimal_places=4, default=0.0, max_digits=5, verbose_name='Own')),
                ('flex_ownership_projection', models.DecimalField(decimal_places=4, default=0.0, max_digits=5, verbose_name='Own')),
                ('adjusted_opportunity', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='AO')),
                ('ao_zscore', models.DecimalField(decimal_places=4, default=0.0, max_digits=6, verbose_name='Z-Score')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('slate_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_projections', to='nfl_sd.SlatePlayer')),
            ],
            options={
                'verbose_name': 'Raw Player Projection',
                'verbose_name_plural': 'Raw Player Projections',
                'ordering': ['-projection'],
            },
        ),
        migrations.CreateModel(
            name='SlatePlayerProjection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projection', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Proj')),
                ('floor', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Flr')),
                ('zscore', models.DecimalField(decimal_places=4, default=0.0, max_digits=6, verbose_name='Z-Score')),
                ('ceiling', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Ceil')),
                ('ceiling_zscore', models.DecimalField(decimal_places=4, default=0.0, max_digits=6, verbose_name='Ceiling Z-Score')),
                ('stdev', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Stdev')),
                ('cpt_ownership_projection', models.DecimalField(decimal_places=4, default=0.0, max_digits=5, verbose_name='Own')),
                ('flex_ownership_projection', models.DecimalField(decimal_places=4, default=0.0, max_digits=5, verbose_name='Own')),
                ('adjusted_opportunity', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='AO')),
                ('ao_zscore', models.DecimalField(decimal_places=4, default=0.0, max_digits=6, verbose_name='Z-Score')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('sim_scores', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, max_digits=5), blank=True, null=True, size=None)),
                ('slate_player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='projection', to='nfl_sd.SlatePlayer')),
            ],
            options={
                'verbose_name': 'Base Player Projection',
                'verbose_name_plural': 'Base Player Projections',
                'ordering': ['-projection'],
            },
        ),
        migrations.CreateModel(
            name='SlatePlayerOwnershipProjectionSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheet', models.FileField(upload_to='uploads/ownership_projections')),
                ('projection_site', models.CharField(choices=[('4for4', '4For4'), ('awesemo', 'Awesemo'), ('awesemo_own', 'Awesemo Ownership'), ('etr', 'Establish The Run'), ('tda', 'The Daily Average'), ('rg', 'Rotogrinders'), ('fc', 'Fantasy Cruncher'), ('rts', 'Run The Sims'), ('sabersim', 'Saber Sim')], default='awesemo', max_length=255)),
                ('slate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ownership_projections_sheets', to='nfl_sd.Slate')),
            ],
        ),
        migrations.CreateModel(
            name='SlatePlayerActualsSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheet', models.FileField(upload_to='uploads/actuals')),
                ('slate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='actuals', to='nfl_sd.Slate')),
            ],
        ),
        migrations.CreateModel(
            name='SlateFieldLineup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=50)),
                ('sim_scores', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, max_digits=5), blank=True, null=True, size=None)),
                ('cpt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpt', to='nfl_sd.SlatePlayerProjection')),
                ('flex1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex1', to='nfl_sd.SlatePlayerProjection')),
                ('flex2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex2', to='nfl_sd.SlatePlayerProjection')),
                ('flex3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex3', to='nfl_sd.SlatePlayerProjection')),
                ('flex4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex4', to='nfl_sd.SlatePlayerProjection')),
                ('flex5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex5', to='nfl_sd.SlatePlayerProjection')),
                ('slate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_lineups', to='nfl_sd.Slate', verbose_name='Slate')),
            ],
        ),
        migrations.CreateModel(
            name='SlateBuildOptimalLineup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.PositiveIntegerField(db_index=True)),
                ('projection', models.DecimalField(db_index=True, decimal_places=2, max_digits=5)),
                ('roi', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('mean', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('median', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('std', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('s75', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('s90', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('actual', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sim_scores', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, max_digits=5), blank=True, null=True, size=None)),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actuals', to='nfl_sd.SlateBuild', verbose_name='Build')),
                ('cpt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimals_cpt', to='nfl_sd.BuildPlayerProjection')),
                ('flex1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimals_flex1', to='nfl_sd.BuildPlayerProjection')),
                ('flex2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimals_flex2', to='nfl_sd.BuildPlayerProjection')),
                ('flex3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimals_flex3', to='nfl_sd.BuildPlayerProjection')),
                ('flex4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimals_flex4', to='nfl_sd.BuildPlayerProjection')),
                ('flex5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimals_flex5', to='nfl_sd.BuildPlayerProjection')),
            ],
            options={
                'verbose_name': 'Optimals Lineup',
                'verbose_name_plural': 'Optimals Lineups',
                'ordering': ['-actual'],
            },
        ),
        migrations.CreateModel(
            name='SlateBuildLineup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.IntegerField(db_index=True, default=0)),
                ('expected_lineup_order', models.PositiveIntegerField(db_index=True, default=0)),
                ('salary', models.PositiveIntegerField(db_index=True)),
                ('projection', models.DecimalField(db_index=True, decimal_places=2, max_digits=5)),
                ('roi', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('mean', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('median', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('std', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('s75', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('s90', models.DecimalField(db_index=True, decimal_places=2, default=0.0, max_digits=10)),
                ('actual', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sim_scores', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(decimal_places=2, max_digits=5), blank=True, null=True, size=None)),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lineups', to='nfl_sd.SlateBuild', verbose_name='Build')),
                ('cpt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpt', to='nfl_sd.BuildPlayerProjection')),
                ('flex1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex1', to='nfl_sd.BuildPlayerProjection')),
                ('flex2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex2', to='nfl_sd.BuildPlayerProjection')),
                ('flex3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex3', to='nfl_sd.BuildPlayerProjection')),
                ('flex4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flex4', to='nfl_sd.BuildPlayerProjection')),
                ('flex5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='flex5', to='nfl_sd.BuildPlayerProjection')),
            ],
            options={
                'verbose_name': 'Lineup',
                'verbose_name_plural': 'Lineups',
                'ordering': ['-actual', 'order_number'],
            },
        ),
        migrations.CreateModel(
            name='SlateBuildGroupPlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='nfl_sd.SlateBuildGroup')),
                ('slate_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='nfl_sd.SlatePlayer')),
            ],
            options={
                'verbose_name': 'Player',
                'verbose_name_plural': 'Players',
            },
        ),
        migrations.AddField(
            model_name='slatebuild',
            name='configuration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='builds', to='nfl_sd.SlateBuildConfig', verbose_name='CFG'),
        ),
        migrations.AddField(
            model_name='slatebuild',
            name='in_play_criteria',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='builds', to='nfl_sd.PlayerSelectionCriteria', verbose_name='IPC'),
        ),
        migrations.AddField(
            model_name='slatebuild',
            name='slate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='builds', to='nfl_sd.Slate'),
        ),
        migrations.AddField(
            model_name='slate',
            name='week',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='slates', to='nfl_sd.Week', verbose_name='Week'),
        ),
        migrations.CreateModel(
            name='MissingAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_name', models.CharField(blank=True, max_length=255, null=True)),
                ('site', models.CharField(choices=[('draftkings', 'DraftKings'), ('fanduel', 'Fanduel'), ('yahoo', 'Yahoo'), ('4for4', '4For4'), ('awesemo', 'Awesemo'), ('awesemo_own', 'Awesemo Ownership'), ('etr', 'Establish The Run'), ('tda', 'The Daily Average'), ('rg', 'Rotogrinders'), ('fc', 'Fantasy Cruncher'), ('rts', 'Run The Sims'), ('sabersim', 'Saber Sim')], default='fanduel', max_length=50)),
                ('alias_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hint_1', to='nfl_sd.Alias')),
                ('alias_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hint_2', to='nfl_sd.Alias')),
                ('alias_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hint_3', to='nfl_sd.Alias')),
            ],
            options={
                'verbose_name': 'Missing Alias',
                'verbose_name_plural': 'Missing Aliases',
            },
        ),
        migrations.CreateModel(
            name='GroupImportSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheet', models.FileField(upload_to='uploads/groups')),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nfl_sd.SlateBuild')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games', to='nfl_sd.Week'),
        ),
        migrations.CreateModel(
            name='ContestPrize',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_rank', models.IntegerField(default=1)),
                ('max_rank', models.IntegerField(default=1)),
                ('prize', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prizes', to='nfl_sd.Contest')),
            ],
        ),
        migrations.AddField(
            model_name='contest',
            name='slate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contests', to='nfl_sd.Slate'),
        ),
        migrations.AddField(
            model_name='buildplayerprojection',
            name='build',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projections', to='nfl_sd.SlateBuild', verbose_name='Build'),
        ),
        migrations.AddField(
            model_name='buildplayerprojection',
            name='slate_player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='build_projections', to='nfl_sd.SlatePlayer'),
        ),
    ]
